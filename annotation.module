<?php

/**
 * Add JS common to annotation modules.
 *
 * @param $node
 *   The node object being annotated.
 * @param $type
 *   String type of annotation.
 * @param $fields
 *   An array of data fields used by this annotation.
 */
function annotation_add_js($node, $type, $fields = array()) {
  beautytips_add_beautytips();
  drupal_add_css(drupal_get_path('module', 'annotation') .'/annotation.css');
  drupal_add_js(drupal_get_path('module', 'annotation') .'/annotation.js');
  drupal_add_js(array('annotation' => array(
    'form' => drupal_get_form('annotation_form', $node, $type, $fields),
  )), 'setting');  
}

function annotation_theme($existing, $type, $theme, $path) {
  return array(
    'annotation_comment' => array(
      'arguments' => array(
        'comment' => NULL,
      ),
      'path' => $path .'/templates/',
      'template' => 'annotation_comment',
    ),
  );
}

function annotation_preprocess_annotation_comment($arguments, $hook) {
  $arguments['name'] = theme('username', $arguments['comment']);
  $arguments['time'] = format_date($arguments['comment']->timestamp, 'small');
  $arguments['body'] = check_markup($arguments['comment']->comment);
}

function annotation_form_js_access($node) {
  return (user_access('post comments') && (node_comment_mode($node->nid) == COMMENT_NODE_READ_WRITE));
}

function annotation_form(&$form_state, $node, $type, $fields = array()) {
  $form = array();

  $form['nid'] = array(
    '#type' => 'value',
    '#value' => $node->nid,
  );
  $form['comment'] = array(
    '#cols' => 30,
    '#type' => 'textarea',
    '#required' => TRUE,
    '#resizable' => FALSE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save comment'),
    '#attributes' => array('disabled' => 'disabled'),
  );
  $form[] = array('#value' => '<a class="cancel" href="#">'. t('Cancel') .'</a>');

  $form[$type] = array('#tree' => TRUE);
  foreach ($fields as $field) {
    $form[$type][$field] = array('#type' => 'hidden');
  }

  return $form;
}

function annotation_form_submit($form, &$form_state) {
  comment_form_submit($form, $form_state);
}
