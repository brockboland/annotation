<?php

/**
 * @file
 * Installation file for Annotation Text module.
 */

/**
 * Implements hook_install().
 */
function annotation_text_install() {
  drupal_install_schema('annotation_text');
}

/**
 * Implements hook_requirements().
 */
function annotation_text_requirements($phase) {
  $requirements = array();
  $t = get_t();

  $requirements['annotation_textchildren']['title'] = $t('jquery.textchildren.js');
  if (file_exists(drupal_get_path('module', 'annotation_text') . '/jquery.textchildren.js')) {
    $requirements['annotation_textchildren']['value'] = $t('jquery.textchildren.js present');
    $requirements['annotation_textchildren']['severity'] = REQUIREMENT_OK;
  }
  else {
    // Required library wasn't found. Abort installation.
    $requirements['annotation_textchildren']['value'] = $t('Not found');
    // Provide a download link.
    $requirements['annotation_textchildren']['description'] = $t('The jQuery Textchildren plugin is missing. <a href="@download">Download</a> and extract it to your <em>annotation/annotation_text</em> module directory.', array(
      '@download' => 'http://plugins.learningjquery.com/textchildren/jquery.textchildren.js',
    ));
    $requirements['annotation_textchildren']['severity'] = REQUIREMENT_ERROR;
  }

  $requirements['annotation_wrapselection']['title'] = $t('jquery.wrapSelection.js');
  if (file_exists(drupal_get_path('module', 'annotation_text') . '/jquery.wrapSelection.js')) {
    $requirements['annotation_wrapselection']['value'] = $t('jquery.wrapSelection.js present');
    $requirements['annotation_wrapselection']['severity'] = REQUIREMENT_OK;
  }
  else {
    // Required library wasn't found. Abort installation.
    $requirements['annotation_wrapselection']['value'] = $t('Not found');
    // Provide a download link.
    $requirements['annotation_wrapselection']['description'] = $t('The jQuery wrapSelection plugin is missing. <a href="@download">Download</a> and extract it to your <em>annotation/annotation_text</em> module directory.', array(
      '@download' => 'http://plugins.jquery.com/project/wrapSelection',
    ));
    $requirements['annotation_wrapselection']['severity'] = REQUIREMENT_ERROR;
  }

  return $requirements;
}


/**
 * Implements hook_schema().
 */
function annotation_text_schema() {
  return array(
    'annotation_text' => array(
      'description' => t('Stores annotation_text-related information.'),
      'fields' => array(
        'cid' => array(
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'description' => t('Foreign key: {comments}.cid'),
        ),
        'vid' => array(
          'type' => 'int', 
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'description' => t('Foreign key: {node}.vid'),
        ),
        'offset' => array(
          'type' => 'int', 
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'description' => t('Selected text: offset'),
        ),
        'length' => array(
          'type' => 'int', 
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'description' => t('Selected text: length'),
        ),
        'string' => array(
          'type' => 'text',
          'not null' => TRUE,
          'description' => t('Selected text: string'),
        ),
      ),
      'primary key' => array('vid', 'cid', 'offset'),
      'indexes' => array(
        'cid' => array('cid'),
        'vid' => array('vid'),
      ),
    ),
  );
}

/**
 * Implements hook_uninstall().
 */
function annotation_text_uninstall() {
  drupal_uninstall_schema('annotation_text');
}

/**
 * Create a dynamic node type for annotation_text.
 */
function annotation_text_update_1() {
  $return = array();

  $info = new stdClass();
  $info->type = 'annotation_text';
  $info->name = t('Text Annotations');
  $info->description = t('A text annotation.');
  $info->body_label = t('Body');
  $info->module = 'node';
  $info->has_body = TRUE;
  $info->custom = TRUE;
  $info->modified = TRUE;
  $info->locked = FALSE;

  $types = node_get_types();
  if (isset($types['annotation_text'])) {
    $info->name = $types['annotation_text']->name;
    $info->description = $types['annotation_text']->description;
    $info->body_label = $types['annotation_text']->body_label;
  }

  node_type_save($info);

  return $return;
}
